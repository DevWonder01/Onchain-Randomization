/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface VRFConsumerBaseV2PlusInterface extends ethers.utils.Interface {
  functions: {
    "acceptOwnership()": FunctionFragment;
    "owner()": FunctionFragment;
    "rawFulfillRandomWords(uint256,uint256[])": FunctionFragment;
    "s_vrfCoordinator()": FunctionFragment;
    "setCoordinator(address)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "acceptOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "rawFulfillRandomWords",
    values: [BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "s_vrfCoordinator",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setCoordinator",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "acceptOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "rawFulfillRandomWords",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "s_vrfCoordinator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCoordinator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "CoordinatorSet(address)": EventFragment;
    "OwnershipTransferRequested(address,address)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CoordinatorSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferRequested"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export class VRFConsumerBaseV2Plus extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: VRFConsumerBaseV2PlusInterface;

  functions: {
    acceptOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "acceptOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    rawFulfillRandomWords(
      requestId: BigNumberish,
      randomWords: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "rawFulfillRandomWords(uint256,uint256[])"(
      requestId: BigNumberish,
      randomWords: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    s_vrfCoordinator(overrides?: CallOverrides): Promise<[string]>;

    "s_vrfCoordinator()"(overrides?: CallOverrides): Promise<[string]>;

    setCoordinator(
      _vrfCoordinator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setCoordinator(address)"(
      _vrfCoordinator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferOwnership(
      to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      to: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  acceptOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "acceptOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  rawFulfillRandomWords(
    requestId: BigNumberish,
    randomWords: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "rawFulfillRandomWords(uint256,uint256[])"(
    requestId: BigNumberish,
    randomWords: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  s_vrfCoordinator(overrides?: CallOverrides): Promise<string>;

  "s_vrfCoordinator()"(overrides?: CallOverrides): Promise<string>;

  setCoordinator(
    _vrfCoordinator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setCoordinator(address)"(
    _vrfCoordinator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferOwnership(
    to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    to: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    acceptOwnership(overrides?: CallOverrides): Promise<void>;

    "acceptOwnership()"(overrides?: CallOverrides): Promise<void>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    rawFulfillRandomWords(
      requestId: BigNumberish,
      randomWords: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "rawFulfillRandomWords(uint256,uint256[])"(
      requestId: BigNumberish,
      randomWords: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    s_vrfCoordinator(overrides?: CallOverrides): Promise<string>;

    "s_vrfCoordinator()"(overrides?: CallOverrides): Promise<string>;

    setCoordinator(
      _vrfCoordinator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setCoordinator(address)"(
      _vrfCoordinator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(to: string, overrides?: CallOverrides): Promise<void>;

    "transferOwnership(address)"(
      to: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    CoordinatorSet(vrfCoordinator: null): EventFilter;

    OwnershipTransferRequested(
      from: string | null,
      to: string | null
    ): EventFilter;

    OwnershipTransferred(from: string | null, to: string | null): EventFilter;
  };

  estimateGas: {
    acceptOwnership(overrides?: Overrides): Promise<BigNumber>;

    "acceptOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    rawFulfillRandomWords(
      requestId: BigNumberish,
      randomWords: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "rawFulfillRandomWords(uint256,uint256[])"(
      requestId: BigNumberish,
      randomWords: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    s_vrfCoordinator(overrides?: CallOverrides): Promise<BigNumber>;

    "s_vrfCoordinator()"(overrides?: CallOverrides): Promise<BigNumber>;

    setCoordinator(
      _vrfCoordinator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setCoordinator(address)"(
      _vrfCoordinator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferOwnership(to: string, overrides?: Overrides): Promise<BigNumber>;

    "transferOwnership(address)"(
      to: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    acceptOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "acceptOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    rawFulfillRandomWords(
      requestId: BigNumberish,
      randomWords: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "rawFulfillRandomWords(uint256,uint256[])"(
      requestId: BigNumberish,
      randomWords: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    s_vrfCoordinator(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "s_vrfCoordinator()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setCoordinator(
      _vrfCoordinator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setCoordinator(address)"(
      _vrfCoordinator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      to: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
