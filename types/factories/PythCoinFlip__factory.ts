/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PythCoinFlip } from "../PythCoinFlip";

export class PythCoinFlip__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_entropy: string, overrides?: Overrides): Promise<PythCoinFlip> {
    return super.deploy(_entropy, overrides || {}) as Promise<PythCoinFlip>;
  }
  getDeployTransaction(
    _entropy: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_entropy, overrides || {});
  }
  attach(address: string): PythCoinFlip {
    return super.attach(address) as PythCoinFlip;
  }
  connect(signer: Signer): PythCoinFlip__factory {
    return super.connect(signer) as PythCoinFlip__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PythCoinFlip {
    return new Contract(address, _abi, signerOrProvider) as PythCoinFlip;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_entropy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientFee",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "sequenceNumber",
        type: "uint64",
      },
    ],
    name: "FlipRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "sequenceNumber",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isHeads",
        type: "bool",
      },
    ],
    name: "FlipResult",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "face",
        type: "bool",
      },
    ],
    name: "PlaceBet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "face",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "rolled",
        type: "bool",
      },
    ],
    name: "Roll",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "randomNumber",
        type: "bytes32",
      },
    ],
    name: "_entropyCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bets",
    outputs: [
      {
        internalType: "bool",
        name: "resolved",
        type: "bool",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "betStatus",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "coinTossBets",
    outputs: [
      {
        internalType: "bool",
        name: "face",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "rolled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entropyProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "userRandomNumber",
        type: "bytes32",
      },
    ],
    name: "flipWithPyth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getBetData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "resolved",
            type: "bool",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "betStatus",
            type: "bool",
          },
        ],
        internalType: "struct PythCoinFlip.Bet",
        name: "betData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getBetStatus",
    outputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFlipFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dataLength",
        type: "uint256",
      },
    ],
    name: "getUserBet",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "resolved",
                type: "bool",
              },
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "blockTime",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "betStatus",
                type: "bool",
              },
            ],
            internalType: "struct PythCoinFlip.Bet",
            name: "bet",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "face",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "rolled",
                type: "bool",
              },
            ],
            internalType: "struct PythCoinFlip.CoinTossBet",
            name: "coinTossBet",
            type: "tuple",
          },
        ],
        internalType: "struct PythCoinFlip.FlipDetails[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60803461007457601f610b9738819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600380546001600160a01b031916919091179055604051610b0790816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600480361015610021575b505050361561001f57600080fd5b005b60009260e08435811c91826322af00fa146109295750816325f2277514610893578163483d45bd1461081a57816352a5f1f8146107005781635bf414ac146106d85781635bfe16301461062657816361f14f11146105f6578163dc92d49a14610444578163de87b07d146100d4575063e051ece90361001157346100d05760203660031901126100d05791819235815280602052205460ff8251918181161515835260081c1615156020820152f35b8280fd5b848385346100d057806003193601126100d0576001600160a01b03928235848116939190849003610441576024938435908252600294602093868552858420978651808a88829c54938481520190885288882092885b8a82821061042b575050506101419250038a6109da565b885190848210610422575b61015585610a6a565b9861016289519a8b6109da565b858a52601f199a8b61017388610a6a565b0189895b82811061040b575050508661031c575b505050505050508351946101b261019d87610a6a565b966101aa865198896109da565b808852610a6a565b0182825b8281106102e257505050805b845181101561024357806101d961023e9287610aa7565b51856101e58389610aa7565b51015184528385528584208651916101fc836109be565b825286519061020a826109be565b5460ff908181161515835260081c161515868201528582015261022d8289610aa7565b526102388188610aa7565b50610a82565b6101c2565b509190949392508051948594818087019381885286518095528701950193905b8382106102705786860387f35b9184965082600192949682808098516102be8482516080809180511515845260018060a01b036020820151166020850152604081015160408501526060810151606085015201511515910152565b01518051151560a08401520151151560c08201520196019201869594929391610263565b85516102ed816109be565b6102f5610a3f565b81528651610302816109be565b85815285848201528382015282828a0101520183906101b6565b91949a869c9193889b989a959a999799819a5b82038281116103df578b11156103f1576000198b018b81116103df579089898f60039061035f6103bb968b610aa7565b5181528b60019182865220908c51946103778661098c565b82549460ff958681161515885260081c16908601528101548c8501528a8101546060850152015416151560808201526103b0828d610aa7565b52610238818c610aa7565b9980156103cd5760001901998e61032f565b634e487b7160e01b8d5260118c528d8dfd5b634e487b7160e01b8e5260118d528e8efd5b50509a509a50505094505091509286808080808080610187565b8d8282610416610a3f565b92010152018a90610177565b9350809361014c565b855484526001958601958f95509301920161012a565b80fd5b5050602090816003193601126105695760035483516320bba64360e21b81526001600160a01b03918216929184828481875afa9182156105bd5787926105c7575b508551631711922960e31b81529116828201819052908481602481875afa80156105bd576001600160801b03918891610590575b501680341061058157849291604491875195869485936319cb825f60e01b8552818501523560248401525af1908115610574578491610528575b5067ffffffffffffffff7f7da1b5ae936dfd098f9225db84f0386b7c229bc907fc79f4a89a335d459a33fc935191168152a180f35b90508181813d831161056d575b61053f81836109da565b8101031261056957519167ffffffffffffffff83168303610569579167ffffffffffffffff6104f3565b8380fd5b503d610535565b50505051903d90823e3d90fd5b855162976f7560e21b81528390fd5b6105b09150863d88116105b6575b6105a881836109da565b810190610a20565b386104b9565b503d61059e565b86513d89823e3d90fd5b6105e8919250853d87116105ef575b6105e081836109da565b8101906109fc565b9038610485565b503d6105d6565b5050346100d05760203660031901126100d05760038260209460ff93358152600186522001541690519015158152f35b5050346100d05760203660031901126100d0578160a0936106d692610649610a3f565b503581526001602052209160ff60038251946106648661098c565b805483811615158752600180891b039060081c16602087015260018101548487015260028101546060870152015416151560808401525180926080809180511515845260018060a01b036020820151166020850152604081015160408501526060810151606085015201511515910152565bf35b5050346100d057826003193601126100d0575490516001600160a01b03909116815260209150f35b5050346100d05760603660031901126100d05780359067ffffffffffffffff8216809203610569576001600160a01b0360243581811603610816576003541680156107d35733036107845750907ff550f248b098f02e33438ac336e78317f12b3eb483ece487cde4331e4f6f4eba918151908152600160443516156020820152a180f35b608490602084519162461bcd60e51b8352820152602360248201527f4f6e6c7920456e74726f70792063616e2063616c6c20746869732066756e637460448201526234b7b760e91b6064820152fd5b835162461bcd60e51b8152602081840152601760248201527f456e74726f70792061646472657373206e6f74207365740000000000000000006044820152606490fd5b8480fd5b505090346100d057826003193601126100d05760035481516320bba64360e21b8152926001600160a01b0392916020918591829086165afa928315610889576020949361086a575b505191168152f35b610882919350843d81116105ef576105e081836109da565b9138610862565b81513d86823e3d90fd5b505090346100d057826003193601126100d05760035482548251631711922960e31b81526001600160a01b039182169481019490945260209184916024918391165afa91821561091f57602093926108f7575b506001600160801b03905191168152f35b6001600160801b0391925061091890843d81116105b6576105a881836109da565b91906108e6565b81513d85823e3d90fd5b85908585346105695760203660031901126105695760a093829135815260016020522080549160018201549060ff60036002850154940154169360ff811615158652600180881b039060081c166020860152840152606083015215156080820152f35b60a0810190811067ffffffffffffffff8211176109a857604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176109a857604052565b90601f8019910116810190811067ffffffffffffffff8211176109a857604052565b90816020910312610a1b57516001600160a01b0381168103610a1b5790565b600080fd5b90816020910312610a1b57516001600160801b0381168103610a1b5790565b60405190610a4c8261098c565b60006080838281528260208201528260408201528260608201520152565b67ffffffffffffffff81116109a85760051b60200190565b6000198114610a915760010190565b634e487b7160e01b600052601160045260246000fd5b8051821015610abb5760209160051b010190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122056c66d94e564eb10d6d9aab1ec7286b8a6a70b8c4db600ac6646363c8bd9da1d64736f6c63430008130033";
