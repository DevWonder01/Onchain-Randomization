/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IVRFMigratableConsumerV2PlusInterface extends ethers.utils.Interface {
  functions: {
    "setCoordinator(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "setCoordinator",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "setCoordinator",
    data: BytesLike
  ): Result;

  events: {
    "CoordinatorSet(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CoordinatorSet"): EventFragment;
}

export class IVRFMigratableConsumerV2Plus extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IVRFMigratableConsumerV2PlusInterface;

  functions: {
    setCoordinator(
      vrfCoordinator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setCoordinator(address)"(
      vrfCoordinator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  setCoordinator(
    vrfCoordinator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setCoordinator(address)"(
    vrfCoordinator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    setCoordinator(
      vrfCoordinator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setCoordinator(address)"(
      vrfCoordinator: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    CoordinatorSet(vrfCoordinator: null): EventFilter;
  };

  estimateGas: {
    setCoordinator(
      vrfCoordinator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setCoordinator(address)"(
      vrfCoordinator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    setCoordinator(
      vrfCoordinator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setCoordinator(address)"(
      vrfCoordinator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
